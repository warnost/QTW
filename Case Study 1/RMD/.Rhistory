library(knitr)
library(rmdformats)
library(formatR)
library(tidyverse)
library(magrittr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# Read lines from offline file
# This creates a character vector for every line in the file
txt = readLines("../Data/offline.final.trace.txt")
#######
# This is taken from the R text book.
# Basically, read in the line, split it by tokens and then assemble it into a data matrix.
#######
processLine = function(x) {
# We split the string at ; = and , based on the format of this file
tokens = strsplit(x, "[;=,]")[[1]]
# Strings with only 10 tokens stop before a mac reading
if (length(tokens) == 10)
return(NULL)
tmp = matrix(tokens[ - (1:10) ], , 4, byrow = TRUE)  #build a 4 column matrix mac,signal,scan,type
cbind(matrix(tokens[c(2, 4, 6:8, 10)], nrow(tmp), 6, #builds a 6 column matrix t,scanMac,x,y,z,angle
byrow = TRUE), tmp) #binds them together
}
#process the whole datafile, first removing the top comments
lines = txt[ substr(txt, 1, 1) != "#" ]
tmp = lapply(lines, processLine)
offline = as.data.frame(do.call("rbind", tmp),stringsAsFactors = FALSE)
# create a variable with the 7 distinct mac names
subMacs = names(sort(table(offline$mac), decreasing = TRUE))[1:7]
# process the online data file by same method as offline
txt = readLines("Data/GeoLoc_online.final.trace.txt")
processLine = function(x){
tokens = strsplit(x, "[;=,]")[[1]]
if (length(tokens) == 10)
return(NULL)
tmp = matrix(tokens[ - (1:10) ], ncol= 4, byrow = TRUE)
cbind(matrix(tokens[c(2, 4, 6:8, 10)], nrow(tmp), 6,
byrow = TRUE), tmp)
}
roundOrientation = function(angles) {
refs = seq(0, by = 45, length  = 9)
q = sapply(angles, function(o) which.min(abs(o - refs)))
c(refs[1:8], 0)[q]
}
readData = function(filename = 'offline.final.trace.txt',
subMacs = c("00:0f:a3:39:e1:c0", "00:0f:a3:39:dd:cd", "00:14:bf:b1:97:8a",
"00:14:bf:3b:c7:c6", "00:14:bf:b1:97:90", "00:14:bf:b1:97:8d",
"00:14:bf:b1:97:81"))  {
txt = readLines(filename)
lines = txt[ substr(txt, 1, 1) != "#" ]
tmp = lapply(lines, processLine)
offline = as.data.frame(do.call("rbind", tmp),
stringsAsFactors= FALSE)
names(offline) = c("time", "scanMac",
"posX", "posY", "posZ", "orientation",
"mac", "signal", "channel", "type")
# keep only signals from access points
offline = offline[ offline$type == "3", ]
# drop scanMac, posZ, channel, and type - no info in them
dropVars = c("scanMac", "posZ", "channel", "type")
offline = offline[ , !( names(offline) %in% dropVars ) ]
# drop more unwanted access points
offline = offline[ offline$mac %in% subMacs, ]
# convert numeric values
numVars = c("time", "posX", "posY", "orientation", "signal")
offline[ numVars ] = lapply(offline[ numVars ], as.numeric)
# convert time to POSIX
offline$rawTime = offline$time
offline$time = offline$time/1000
class(offline$time) = c("POSIXt", "POSIXct")
# round orientations to nearest 45
offline$angle = roundOrientation(offline$orientation)
return(offline)
}
offline = readData(filename = '../Data/offline.final.trace.txt')
subMacs = names(sort(table(offline$mac), decreasing = TRUE))
online = readData(filename = '../Data/online.final.trace.txt')
# this is the first non-comment line in the text file
txt[4]
# format signal stength as an integer
offline$signal %<>% as.integer
online$signal %<>% as.integer
# limit to top 7 macs
online = online[ online$mac %in% subMacs, ]
offline = offline[ offline$mac %in% subMacs, ]
# remove channel and scanMac as they have no bearing on the analysis
# transpose long to wide so each of the 7 macs has a column
offline_pivot<-select(offline, -c(channel,scanMac)) %>% pivot_wider(names_from = mac,values_from = signal, values_fn = list(signal=mean))
# format signal stength as an integer
offline$signal %<>% as.integer
online$signal %<>% as.integer
# limit to top 7 macs
online = online[ online$mac %in% subMacs, ]
offline = offline[ offline$mac %in% subMacs, ]
# remove channel and scanMac as they have no bearing on the analysis
# transpose long to wide so each of the 7 macs has a column
offline_pivot<-offline %>% pivot_wider(names_from = mac,values_from = signal, values_fn = list(signal=mean))
online_pivot<- online %>% pivot_wider(names_from = mac,values_from = signal, values_fn = list(signal=mean))
# check for nas
offline_pivot$nas<-rowSums(is.na(offline_pivot))
# remove nas
offline_pivot = offline_pivot[offline_pivot$nas==0,]
# create categorical variable representing the x-y position
offline_pivot$posXY = paste(offline_pivot$posX, offline_pivot$posY, sep = "-")
online_pivot$posXY = paste(online_pivot$posX, online_pivot$posY, sep = "-")
install.packages("e1071")
table2[1,1] <- "All 7 macs"
